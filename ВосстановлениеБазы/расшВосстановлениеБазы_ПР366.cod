extends ТББ_Базовый.ВосстановлениеБазы;

import ТББ_Базовый classes Нумератор;

inclass public

  --@doc По имени проекта возвращает условный номер, опеделяющий порядок сортировки. Метод подлежит расширению.
  func ИндексПроекта(PrjName: string): integer;
    if (PrjName = Profile.ClassProject):
      Return 41;
    else
      Return extended ИндексПроекта(PrjName);
    fi;
  end;

inclass private

  --@doc Инициализация методов восстановления подгруппы "Классификаторы".
  proc ИнициализироватьЭлементыВосстановления_Классификаторы;
    var локИмяПроекта: string;
    var ЭтоНоваяБаза: logical;
    var вибКлассификатор: integer;
    extended  ИнициализироватьЭлементыВосстановления_Классификаторы;
    локИмяПроекта  = Profile.ClassProject;
    ЭтоНоваяБаза = НоваяИнфБазаДляПроекта (локИмяПроекта);
    if not СИС2.Переменные.ПроцессЗагрузкиПрерван:
      вибКлассификатор = СИС2.Сервис.блВосстановлениеБазы.вибКлассификатор;
      AddRecoveryItem(ЭтоНоваяБаза, вибКлассификатор, локИмяПроекта, 'Коды категорий персонала',              'ЗагрузитьККП');
      AddRecoveryItem(ЭтоНоваяБаза, вибКлассификатор, локИмяПроекта, 'Агрегирующие коды категорий персонала', 'ЗагрузитьККПА');
      AddRecoveryItem(ЭтоНоваяБаза, вибКлассификатор, локИмяПроекта, 'Типы организаций',                      'ЗагрузитьКТО');
    fi;
  end;

  proc ЗагрузитьККП;
    ЗагрузитьФайлВосстановления(RepositoryLocation(Profile.ClassProject) + 'ККП.tbc',  'Коды категорий персонала');
  end;

  proc ЗагрузитьККПА;
    ЗагрузитьФайлВосстановления(RepositoryLocation(Profile.ClassProject) + 'ККПА.tbc', 'Агрегирующие коды категорий персонала');
  end;

  proc ЗагрузитьКТО;
    ЗагрузитьФайлВосстановления(RepositoryLocation(Profile.ClassProject) + 'КТО.tbc',   'Типы организаций');
  end;


end